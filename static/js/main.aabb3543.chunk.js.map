{"version":3,"sources":["firebase.js","components/SaveButton.js","components/SavedGames.js","components/Header.js","components/Footer.js","components/Form.js","components/Button.js","functionality.js","components/ScoreCard.js","components/GameCard.js","apiRequest.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","SaveButton","tabIndex","aria-label","onClick","props","gameToParent","thisIndex","alert","Component","SavedGames","deleteGame","gameID","database","ref","child","remove","gameIndex","saveSetter","state","games","gameData","gameName","on","snapshot","res","val","savedGamesState","gameKey","push","id","gameCategory","category","numQuestions","setState","console","log","this","className","map","game","index","key","to","Header","exact","Footer","Form","onSubmit","e","handleSubmit","name","type","required","value","onChange","handleChange","placeholder","triviaCategory","nbrOfQuestions","gameCardReady","Button","children","saveGame","apiData","newGameSave","length","saveGameRef","set","ScoreCard","quizComplete","score","gameLength","GameCard","checkAnswer","userAnswer","apidata","questionNumber","correct_answer","questionCorrect","difficulty","question","incorrect_answers","answers","concat","sort","parse","answer","init","amount","a","categoryParam","Axios","url","getQuestions","App","event","preventDefault","apiRequest","then","actualState","data","results","target","savedGame","newGameClick","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.aabb3543.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCD2SeUiuQN0IHwYp4-0Z3pY8hRy_6RdpI\",\r\n    authDomain: \"triviapur.firebaseapp.com\",\r\n    databaseURL: \"https://triviapur.firebaseio.com\",\r\n    projectId: \"triviapur\",\r\n    storageBucket: \"triviapur.appspot.com\",\r\n    messagingSenderId: \"81080274402\",\r\n    appId: \"1:81080274402:web:941656f82a968b02357dbb\"\r\n};\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { Component } from \"react\";\r\n\r\nclass SaveButton extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <button\r\n          tabIndex=\"0\"\r\n          aria-label=\"load game\"\r\n          onClick={() => {\r\n            this.props.gameToParent(this.props.thisIndex);\r\n            alert(\" Game loaded to memory! Click play loaded game to continue.\")\r\n          }}\r\n        >\r\n          Load Game to Memory\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SaveButton;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from \"../firebase.js\";\r\nimport SaveButton from \"./SaveButton\";\r\n\r\nclass SavedGames extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      games: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const dbRef = firebase.database().ref();\r\n\r\n    dbRef.on(\"value\", (snapshot) => {\r\n      const res = snapshot.val();\r\n\r\n      const savedGamesState = [];\r\n\r\n      for (let gameKey in res) {\r\n        savedGamesState.push({\r\n          id: gameKey,\r\n          gameName: res[gameKey].gameName,\r\n          gameCategory: res[gameKey].category,\r\n          numQuestions: res[gameKey].numQuestions,\r\n          gameData: res[gameKey].gameData,\r\n        });\r\n      }\r\n\r\n      this.setState({\r\n        games: savedGamesState,\r\n      });\r\n    });\r\n  }\r\n\r\n  deleteGame = (gameID) => {\r\n    const dbRef = firebase.database().ref();\r\n    dbRef.child(gameID).remove();\r\n    alert(\"Deleted!\");\r\n  };\r\n\r\n  gameToParent = (gameIndex) => {\r\n    this.props.saveSetter(\r\n      this.state.games[gameIndex].gameData,\r\n      this.state.games[gameIndex].gameName\r\n    );\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n\r\n    return (\r\n      <section className=\"savedGameList\">\r\n        <div className=\"wrapper\">\r\n          <h2>Saved Games</h2>\r\n\r\n          <ul className=\"allSavedGames\">\r\n            {this.state.games.map((game, index) => {\r\n              const deleteFunction = () => {\r\n                this.deleteGame(game.id);\r\n              };\r\n              return (\r\n                <li className=\"savedGame\" key={index}>\r\n                  <h3>{game.gameName}</h3>\r\n                  <p>Category: {game.gameCategory}</p>\r\n                  <p>Number of Questions: {game.numQuestions}</p>\r\n                  <div className=\"controlButtons\">\r\n                    <SaveButton\r\n                      gameToParent={this.gameToParent}\r\n                      thisIndex={index}\r\n                    />\r\n                    <Link to={`/newGame`}>Play Loaded Game</Link>\r\n                    <button onClick={deleteFunction}>Delete Game</button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SavedGames;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1><Link exact to=\"/\">Not So Trivial Pursuit</Link></h1>        \r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>\r\n                Created by Spencer Davis, Luz De La Rosa, Ryan Shao, Maria Lujan Vinas &copy; 2020\r\n            </p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer; ","import React, { Component } from \"react\";\r\n\r\nclass Form extends Component {\r\n  render() {\r\n    return (\r\n      <form onSubmit={(e) => this.props.handleSubmit(e)}>\r\n        <label>Game Name </label>\r\n        <input\r\n          name=\"gameName\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          required=\"required\"\r\n          value={this.props.gameName}\r\n          onChange={(e) => this.props.handleChange(e)}\r\n          aria-label=\"write a title for your quiz\"\r\n          placeholder= \"Enter a game name!\"\r\n        ></input>\r\n        <label> Category</label>\r\n\r\n        <select\r\n          name=\"triviaCategory\"\r\n          className=\"form-control\"\r\n          value={this.props.triviaCategory}\r\n          onChange={(e) => this.props.handleChange(e)}\r\n        >\r\n          <option value=\"Any\">Any Category</option>\r\n          <option value=\"9\">General Knowledge</option>\r\n          <option value=\"10\">Entertainment: Books</option>\r\n          <option value=\"11\">Entertainment: Film</option>\r\n          <option value=\"12\">Entertainment: Music</option>\r\n          <option value=\"13\">Entertainment: Musicals &amp; Theatres</option>\r\n          <option value=\"14\">Entertainment: Television</option>\r\n          <option value=\"15\">Entertainment: Video Games</option>\r\n          <option value=\"16\">Entertainment: Board Games</option>\r\n          <option value=\"17\">Science &amp; Nature</option>\r\n          <option value=\"18\">Science: Computers</option>\r\n          <option value=\"19\">Science: Mathematics</option>\r\n          <option value=\"20\">Mythology</option>\r\n          <option value=\"21\">Sports</option>\r\n          <option value=\"22\">Geography</option>\r\n          <option value=\"23\">History</option>\r\n          <option value=\"24\">Politics</option>\r\n          <option value=\"25\">Art</option>\r\n          <option value=\"26\">Celebrities</option>\r\n          <option value=\"27\">Animals</option>\r\n          <option value=\"28\">Vehicles</option>\r\n          <option value=\"29\">Entertainment: Comics</option>\r\n          <option value=\"30\">Science: Gadgets</option>\r\n          <option value=\"31\">Entertainment: Japanese Anime &amp; Manga</option>\r\n          <option value=\"32\">Entertainment: Cartoon &amp; Animations</option>\r\n        </select>\r\n\r\n        <label>Number of Questions</label>\r\n        <select\r\n          name=\"nbrOfQuestions\"\r\n          className=\"form-control\"\r\n          value={this.props.nbrOfQuestions}\r\n          onChange={(e) => this.props.handleChange(e)}\r\n        >\r\n          <option value=\"10\">10</option>\r\n          <option value=\"15\">15</option>\r\n          <option value=\"20\">20</option>\r\n        </select>\r\n        {this.props.gameCardReady ? null : (\r\n          <input\r\n          type=\"submit\"\r\n          aria-label=\"select quiz options and begin game\"\r\n          value=\"Game on!\"\r\n        />\r\n\r\n        )}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Button = ({ onClick, children, id }) => {\r\n  return (\r\n    <button\r\n      aria-label=\"quiz answer option\"\r\n      className=\"button\"\r\n      onClick={onClick}\r\n      id={id}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import firebase from './firebase';\r\n\r\nconst saveGame = (gameName, apiData) => {\r\n  const newGameSave = {\r\n    gameName: gameName,\r\n    category: apiData[0].category,\r\n    numQuestions: apiData.length,\r\n    gameData: apiData,\r\n  };\r\n\r\n  const dbRef = firebase.database().ref();\r\n\r\n  const saveGameRef = dbRef.push();\r\n  saveGameRef.set({\r\n    id: saveGameRef.key,\r\n    ...newGameSave,\r\n  });\r\n};\r\n\r\nexport default saveGame;\r\n","import React from \"react\";\r\n\r\nconst ScoreCard = (props) => {\r\n  return props.quizComplete ? (\r\n    <article className=\"scoreCard winner\">\r\n      <h4>Your Score:</h4>\r\n      <p>\r\n        {props.score} / {props.gameLength}\r\n      </p>\r\n      <p>\r\n        Congratulations on finishing the quiz! Click the \"new game\" to play\r\n        again or click \"save game\" to store these questions for future play.\r\n      </p>\r\n    </article>\r\n  ) : (\r\n    <article className=\"scoreCard\">\r\n      <h4>Your Score:</h4>\r\n      <p>\r\n        {props.score} / {props.gameLength}\r\n      </p>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default ScoreCard;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"./Button\";\r\nimport saveGame from \".././functionality\";\r\nimport ScoreCard from \"./ScoreCard\";\r\nimport parse from \"html-react-parser\";\r\n\r\nclass GameCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questionNumber: 0,\r\n      score: 0,\r\n      questionCorrect: false,\r\n      quizComplete: false,\r\n    };\r\n  }\r\n\r\n  checkAnswer = (userAnswer) => {\r\n    if (\r\n      userAnswer ===\r\n        this.props.apidata[this.state.questionNumber].correct_answer &&\r\n      this.state.questionNumber < this.props.apidata.length - 1\r\n    ) {\r\n      this.setState({\r\n        questionNumber: this.state.questionNumber + 1,\r\n        score: this.state.score + 1,\r\n        questionCorrect: true,\r\n      });\r\n    } else if (\r\n      userAnswer !==\r\n        this.props.apidata[this.state.questionNumber].correct_answer &&\r\n      this.state.questionNumber < this.props.apidata.length - 1\r\n    ) {\r\n      this.setState({\r\n        questionNumber: this.state.questionNumber + 1,\r\n        questionCorrect: false,\r\n      });\r\n    } else if (\r\n      userAnswer ===\r\n        this.props.apidata[this.state.questionNumber].correct_answer &&\r\n      this.state.quizComplete === false\r\n    ) {\r\n      this.setState({\r\n        score: this.state.score + 1,\r\n        questionCorrect: true,\r\n        quizComplete: true,\r\n      });\r\n    } else if (\r\n      userAnswer !==\r\n        this.props.apidata[this.state.questionNumber].correct_answer &&\r\n      this.state.quizComplete === false\r\n    ) {\r\n      this.setState({\r\n        questionCorrect: false,\r\n        quizComplete: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      difficulty,\r\n      question,\r\n      incorrect_answers,\r\n      correct_answer,\r\n    } = this.props.apidata[this.state.questionNumber];\r\n    const answers = [correct_answer].concat(incorrect_answers).sort();\r\n    return (\r\n      <article className=\"GameCard GameCardCorrect\">\r\n        <div className=\"cardTitle\">\r\n          <h2>{this.props.gameName}</h2>\r\n          <div className=\"flexContainer\">\r\n            <span>Question Difficulty: {difficulty}</span>\r\n            <ScoreCard\r\n              score={this.state.score}\r\n              gameLength={this.props.apidata.length}\r\n              questionNumber={this.state.questionNumber}\r\n              quizComplete={this.state.quizComplete}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"questionBox\">\r\n          <p>\r\n            Question number {this.state.questionNumber + 1}: {parse(question)}\r\n          </p>\r\n          <div className=\"answerSpace\">\r\n            {answers.map((answer, index) => {\r\n              return (\r\n                <Button key={index} onClick={() => this.checkAnswer(answer)}>\r\n                  {parse(answer)}\r\n                </Button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <button\r\n          onClick={() => {\r\n            saveGame(this.props.gameName, this.props.apidata);\r\n            alert(\"Your game has been saved! Click Saved Games to see it ✅\");\r\n          }}\r\n          aria-label=\"save game\"\r\n        >\r\n          Save Game\r\n        </button>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameCard;\r\n","import Axios from 'axios';\r\nfunction init() {\r\n\r\n    async function getQuestions(category, amount) {\r\n        //this line modify the url if the category selected is \"any\"\r\n        const categoryParam = (category !== \"Any\") ? `&category=${category}` : \"\"\r\n        return Axios({\r\n            url: `https://opentdb.com/api.php?amount=${amount}${categoryParam}`,\r\n        })\r\n    }\r\n\r\n    return {\r\n        getQuestions,\r\n    };\r\n}\r\n\r\nexport default init();","import React, { Component } from \"react\";\r\nimport SavedGames from \"./components/SavedGames\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Form from \"./components/Form\";\r\nimport GameCard from \"./components/GameCard\";\r\nimport apiRequest from \"./apiRequest\";\r\nimport \"./sass/App.scss\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      triviaCategory: \"Any\",\r\n      nbrOfQuestions: 10,\r\n      apiData: [],\r\n      gameName: \"\",\r\n      gameCardReady: false,\r\n    };\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const amount = this.state.nbrOfQuestions;\r\n    const category = this.state.triviaCategory;\r\n\r\n    apiRequest.getQuestions(category, amount).then((res) => {\r\n      const actualState = this.state;\r\n      actualState.apiData = res.data.results;\r\n      this.setState({\r\n        actualState,\r\n        gameCardReady: true,\r\n      });\r\n      console.log(this.state.apiData);\r\n    });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n\r\n    console.log([value]);\r\n  };\r\n\r\n  saveSetter = (savedGame, gameName) => {\r\n    this.setState({\r\n      apiData: savedGame,\r\n      gameCardReady: true,\r\n      gameName: gameName,\r\n    });\r\n  };\r\n\r\n  newGameClick = (e) => {\r\n    this.setState({\r\n      gameCardReady: false,\r\n      triviaCategory: \"Any\",\r\n      nbrOfQuestions: 10,\r\n      apiData: [],\r\n      gameName: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <div className=\"wrapper\">\r\n            <Header />\r\n            <Route\r\n              path=\"/newGame\"\r\n              render={() => {\r\n                return (\r\n                  <>\r\n                    <Form\r\n                      handleSubmit={this.handleSubmit}\r\n                      handleChange={this.handleChange}\r\n                      triviaCategory={this.state.triviaCategory}\r\n                      nbrOfQuestions={this.state.nbrOfQuestions}\r\n                      gameName={this.state.gameName}\r\n                      gameCardReady={this.state.gameCardReady}\r\n                    />\r\n                    {this.state.gameCardReady ? (\r\n                      <GameCard\r\n                        apidata={this.state.apiData}\r\n                        gameName={this.state.gameName}\r\n                      />\r\n                    ) : null}\r\n                  </>\r\n                );\r\n              }}\r\n            />\r\n            <Route\r\n              path=\"/savedGames\"\r\n              render={() => {\r\n                return (\r\n                  <>\r\n                    <SavedGames\r\n                      apiData={this.state.apiData}\r\n                      gameName={this.state.gameName}\r\n                      saveSetter={this.saveSetter}\r\n                    />\r\n                  </>\r\n                );\r\n              }}\r\n            />\r\n            <nav>\r\n              <ul>\r\n                <button>\r\n                  <Link to=\"/newGame\" onClick={this.newGameClick}>\r\n                    New Game\r\n                  </Link>\r\n                </button>\r\n                <button>\r\n                  <Link to=\"/savedGames\">Saved Games</Link>\r\n                </button>\r\n              </ul>\r\n            </nav>\r\n            <Footer />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}